/*
 * Text
 */

.text-left {
    text-align: left;
}

.text-center {
    text-align: center;
}

.text-right {
    text-align: right;
}

.text-justify {
    text-align: justify;
}

.text-justify-full {
    @extend .text-justify;

    &::after {
        content: "";
        display: inline-block;
        width: 100%;
    }

    @supports (text-align-last: justify) {
        text-align-last: justify;

        &::after {
            display: none;
        }
    }
}

.sub-heading {
    font-family: $base-font-family;
    font-weight: 600;
}

.fw-normal {
    font-weight: normal;
}

.fw-bold {
    font-weight: bold;
}

@for $i from 1 through 9 {
    $weight: $i * 100;
    .fw-#{$weight} {
        font-weight: $weight;
    }
}

.font-size-large {
    font-size: 1.5em;
}

.font-size-double {
    font-size: 2em;
}

.font-size-triple {
    font-size: 3em;
}

.shadow {
    text-shadow: 1px 1px 4px $shadow-color;
}

.full-shadow {
    text-shadow: 0 0 0.24em black;
}

.avenir-hand {
    font-family: AvenirCondensedHand;
    font-weight: normal;
}

.font-smoothing-normal {
    -webkit-font-smoothing: subpixel-antialiased;
    -moz-osx-font-smoothing: auto;
}

.font-smoothing-dark {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

.avoid-wrap {
    white-space: nowrap;

    @supports(text-wrap: avoid) {
        white-space: initial;
        white-space: unset;
        text-wrap: avoid;
    }
}

.no-select {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
    -khtml-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
}

.meta {
    font-size: smaller;
    font-weight: 600;
    text-transform: uppercase;
}

/*
 * Block Styles
 */

.border-between {
    @extend .border-basic-b;

    &:last-of-type {
        border-bottom: 0;
    }
}

.border-around {
    @extend .border-basic-b;

    &:first-of-type {
        @extend .border-basic-t;
    }
}

/*
 * Links
 */

.subtle-link {
    color: inherit;
    text-decoration: none;

    &:visited {
        color: inherit;
    }

    &:hover {
        color: inherit;
        text-decoration: underline;
    }
}

.subtle-icon {
    @extend .subtle-link;

    &:hover {
        text-decoration: none;
    }
}

/*
 * Images
 */

.bg-img {
    @include background-image;
}

.object-fit-cover {
    @extend .relative, .bg-img;

    & > img {
        @extend .fill-parent;
        object-fit: cover;
    }
}

.splash-background {
    @include background-image($splash-image, $responsive: true);
}

/*
 * Icons
 */

.icon-size {
    font-size: $base-icon-size;
}

.scroll-arrow {
    font-size: 36px;
    padding: 4px;
}

@media screen and (max-height: $bp-mobile) and (min-width: 450px) {
    [data-force-fullscreen].screen-height .scroll-arrow {
        display: none;
    }
}

.fa-icon-circle {
    $circle-size: 1.5;
    line-height: $circle-size;
    text-align: center;
    border-radius: 50%;
    // border-width: 2px;
    border-width: .07em;
    border-style: solid;
    border-color: inherit;

    &::before {
        display: block;
        width: $circle-size * 1em;
        height: $circle-size * 1em;
        margin: 0;
    }
}

// loops through all icon classes, passes their brand color to all relevant styles. this can be unset later.
@each $icon-name, $color in $fa-icons {
    .#{$icon-name}-icon {
        &, &:hover {
            color: $color;
            background-color: $color !important;
            border-color: $color !important;
        }
    }
}

// styling resets, including inherit fallback for older browsers
%reset-color {
    color: inherit;
}

%reset-background-color {
    background-color: inherit !important;
}

%reset-border-color {
    border-color: inherit !important;
}

// universal styling for the anchor tags that contain social-media fa-icons.
.media-icon {
    display: inline-block;
    position: relative;
    line-height: inherit;
    transition: .3s;
    z-index: 1;

    &.fab {
        @extend .fw-normal;
    }

    &::before {
        @extend .no-select;
        position: relative;
        user-select: none;
        z-index: 3;
    }

    &::after {
        content: "";
        position: absolute;
        top: 0; left: 0; right: 0; bottom: 0;
        transition: inherit;
        z-index: 2;
    }
}

// basic icons inherit their text color. hovering reveals their brand color.
.media-icon-basic .media-icon {
    &:not(:hover) {
        @extend %reset-color;
    }

    &, &:hover {
        @extend %reset-background-color, %reset-border-color;
    }
}

// square buttons. white icons with brand-color background. hovering animates to white background with icons in their brand color.
.media-icon-button .media-icon {
    @extend .media-icon-bloat;
    color: white;

    &:hover::after {
        background-color: rgba(white, 0.2);
    }
}

.media-icon-shutter .media-icon {
    @extend .media-icon-bloat;

    &:not(:hover) {
        color: white;
    }

    &::after {
        left: 50%; right: 50%;
    }

    &:hover::after {
        left: 0; right: 0;
        background-color: white;
    }
}

ul.media-icon-basic, ul.media-icon-button, ul.media-icon-circle {
    @extend .unlist;
}

// forces icon links to fill a certain size, with icon hovering in the middle
.media-icon-bloat .media-icon {
    @extend .flex-center;
    display: inline-flex;
    min-width: 1.2em;
    min-height: 1.2em;
}

// expands a list of icons; icons get 2em of space, and links expand to maintain contact.
.media-icon-list {
    @extend .media-icon-bloat;

    > * {
        margin: 0;
    }

    &.flex-row, &.flex-col {
        > * {
            flex: 0 1 2em;
        }
    }

    &.media-icon-circle .media-icon {
        flex: 0 1 auto;
        margin: 0 .25em;
    }

    &:not(.flex-row):not(.flex-col):not(.media-icon-circle) .media-icon {
        min-width: 2em;
    }

    &:not(.media-icon-circle) > li {
        display: inline-flex;

        > .media-icon:only-child {
            display: flex;
            @extend .flex-center, .fill-flex-parent;
        }
    }
}

// stretches icons to evenly fill space of container
.media-icon-stretch {
    &.flex-row, &.flex-col {
        > * {
            flex: 1 1 0;
        }
    }
}

.media-icon-circle .media-icon {
    @extend .fa-icon-circle;

    &:not(:hover) {
        @extend %reset-color, %reset-background-color, %reset-border-color;
    }

    &:hover {
        color: white;
        text-shadow: none;

        &::before {
            box-shadow: none;
        }
    }
}

.media-icon-shadow .media-icon::before {
    box-shadow: 2px 1px 6px rgba(0, 0, 0, 0.4), 2px 1px 6px rgba(0, 0, 0, 0.4) inset;
}

/*
 * Transforms
 */

.hw-accel {
    -webkit-transform: translateZ(0);
    transform: translateZ(0);
}

.translate-left {
    -webkit-transform: translateX(-100%);
    transform: translateX(-100%);
}

.translate-left-half {
    -webkit-transform: translateX(-50%);
    transform: translateX(-50%);
}

.translate-left-10 {
    -webkit-transform: translateX(-10%);
    transform: translateX(-10%);
}

.translate-left-65 {
    transform: translateX(-65%);
}

.translate-right {
    -webkit-transform: translateX(100%);
    transform: translateX(100%);
}

.translate-right-half {
    -webkit-transform: translateX(50%);
    transform: translateX(50%);
}

.translate-right-10 {
    -webkit-transform: translateX(10%);
    transform: translateX(10%);
}

.translate-x-none {
    -webkit-transform: translateX(0%);
    transform: translateX(0%);
}

.flip-x {
    -webkit-transform: rotate3d(1, 0, 0, 180deg);
    transform: rotate3d(1, 0, 0, 180deg);
}

.no-backface {
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
}

/*
 * Transitions
 */

.t-default {
    -webkit-transition: $trans-default;
    transition: $trans-default;
}

.t-inherit {
    -webkit-transition: inherit;
    transition: inherit;
}

.t-deep > * {
    @extend .t-inherit;
}

.t-none {
    -webkit-transition: 0s;
    transition: 0s;
}

/*
 * Hover
 */

.hover-fade-in {
    opacity: 0;
    -webkit-transition: opacity $trans-default;
    transition: opacity $trans-default;

    @include hover {
        opacity: 1;
    }
}

.hover-scale {
    transform: scale(1) translateZ(0);

    @include hover {
        transform: scale(1.05) translateZ(0);
    }
}

.hover-lighten {
    @extend .relative;

    &::after {
        @extend .fill-parent, .t-inherit;
        content: "";
        background-color: rgba(white, 0);
    }

    @include hover {
        &::after {
            background-color: rgba(white, 0.1);
        }
    }
}

.hover-blur {
    @include blur(0);
    -webkit-transition: -webkit-filter $trans-default;
    transition: filter $trans-default;

    @include hover {
        @include blur(5px);
    }
}

/*
 * Target
 */

.target-display {
    display: none;

    &:target {
        display: inherit;
    }
}

/*
 * Media Queries
 */

.mq-dylan {
    @media screen and (max-aspect-ratio: 988/675) {
        -webkit-transform: translateX(-20%);
        transform: translateX(-20%);
    }

    @media screen and (max-aspect-ratio: 927/675) {
        -webkit-transform: translateX(-30%);
        transform: translateX(-30%);
    }

    @media screen and (max-aspect-ratio: 860/675) {
        -webkit-transform: translateX(-40%);
        transform: translateX(-40%);
    }
}

.mq-rob {
    @media screen and (max-aspect-ratio: 988/675) {
        -webkit-transform: translateX(20%);
        transform: translateX(20%);
    }

    @media screen and (max-aspect-ratio: 927/675) {
        -webkit-transform: translateX(30%);
        transform: translateX(30%);
    }

    @media screen and (max-aspect-ratio: 860/675) {
        -webkit-transform: translateX(40%);
        transform: translateX(40%);
    }
}

@media screen and (max-aspect-ratio: 756/675) and (max-width: 550px) {
    .mq-logo {
        margin-top: 30px;
        // margin-top: 9vw;
    }
}

@media screen and (max-aspect-ratio: 756/675) {
    .mq-dylan, .mq-rob {
        top: 59%;
        bottom: auto;
    }

    .mq-dylan {
        transform: translateX(-48%);
    }

    .mq-rob {
        transform: translateX(48%);
    }
}

@media screen and (max-width: $bp-laptop) {
    .mq-rob-2 {
        left: 100%;
        transform: translateX(-65%);
    }

    .mq-temper-tantrum {
        margin-left: 0;
    }
}

.mq-icon-size {
    $bp-small: 27rem;
    $bp-large: $bp-mobile * (100% / $splash-wrapper-width) / 16px * 1rem;
    @extend .icon-size;

    @media screen and (max-height: $bp-small), screen and (max-width: $bp-small) {
        font-size: $base-icon-size / $bp-small * 100vmin;
    }

    @media screen and (min-width: $bp-large) {
        font-size: $base-icon-size / $bp-large * 100vw;
    }

    @media screen and (max-width: $bp-small) {
        display: flex;
        justify-content: space-around;
    }
}

.mq-bandcamp-height {
    height: 398px;

    @media screen and (min-width: (330px + (2 * $spacing-unit))) {
        height: 373px;
    }
}

/*
 * Javascript
 */

.js-rob-resize {
    top: map-get($paddings, "l");
    bottom: auto;
}
